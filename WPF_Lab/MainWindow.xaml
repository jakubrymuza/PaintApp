<Window x:Class="WPF_Lab.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:p="clr-namespace:WPF_Lab.Properties"
        xmlns:local="clr-namespace:WPF_Lab"
        mc:Ignorable="d"
        Title="Mini Paint" MinHeight="250" MinWidth="950" FontSize="16" WindowState="Maximized" Icon="Paint.ico" Loaded="WindowLoaded" Name="MyWindow"  DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>

        <local:DegreeNameConverter x:Key="degreeNameConverter"/>
        <local:ColorToBrushConverter x:Key="colorToBrushConverter"/>
        <local:ColorToTextColorConverter x:Key="colorToTextColorConverter"/>
        <local:NameFormatConverter x:Key="nameFormatConverter"/>
        <local:AngleConverter x:Key="angleConverter"/>
        <local:ColorListConverter x:Key="colorListConverter"/>

        <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
            <Setter Property="Width" Value="90"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="disabledButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="IsEnabled" Value="{Binding Path=selectedData.IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"/>
        </Style>


        <LinearGradientBrush x:Key="gradientBrush" StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="Black" Offset="0.0" />
            <GradientStop Color="DarkSlateGray" Offset="0.5" />
            <GradientStop Color="Black" Offset="1" />
        </LinearGradientBrush>

        <Style TargetType="{x:Type GridSplitter}">
            <Setter Property="ResizeDirection" Value="Columns"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Width" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="Black"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="infoLabel">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="disableTextBox">
            <Setter Property="IsEnabled" Value="{Binding Path=selectedData.IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"/>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="90"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Background="LightGray" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <Button Content="{x:Static p:Resources.rectangleText}" Click="AddRectangle" Style="{StaticResource buttonStyle}"/>
            <Button Grid.Column="1" Content="{x:Static p:Resources.ellipseText}" Click="AddEllipse" Style="{StaticResource buttonStyle}"/>

            <Grid Grid.Column="2" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="{x:Static p:Resources.widthText}" Style="{StaticResource infoLabel}"/>
                <TextBlock Text="{x:Static p:Resources.heightText}" Style="{StaticResource infoLabel}" Grid.Row="1"/>
                <TextBlock Text="{x:Static p:Resources.colorText}" Style="{StaticResource infoLabel}" Grid.Row="2"/>
                <TextBlock Text="{Binding ElementName=rotationSlider,Path=Value,Mode=OneWay,Converter={StaticResource degreeNameConverter}}" Style="{StaticResource infoLabel}" Grid.Row="3"/>
                <TextBox Style="{StaticResource disableTextBox}" Name="widthTextBox" Grid.Column="1">
                    <TextBox.Text>
                        <Binding Path="selectedData.CurrentShape.Width" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:SizeValidator/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox Style="{StaticResource disableTextBox}" Name="heightTextBox" Grid.Column="1" Grid.Row="1">
                    <Binding Path="selectedData.CurrentShape.Height" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:SizeValidator/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
               
                <ComboBox SelectedItem="{Binding Path=selectedData.CurrentShape.Fill,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource colorListConverter}}"  Name="colorsList" ItemsSource="{Binding}"  Grid.Column="1" Grid.Row="2" IsEnabled="{Binding Path=selectedData.IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},UpdateSourceTrigger=PropertyChanged,Mode=OneWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock  FontSize="12" Width="100" HorizontalAlignment="Center" Background="{Binding Rgb,Converter={StaticResource colorToBrushConverter}}" Text="{Binding Name,Converter={StaticResource nameFormatConverter}}" Foreground="{Binding Rgb,Converter={StaticResource colorToTextColorConverter}}" TextAlignment="Center"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Slider Value="{Binding Path=selectedData.CurrentShape.RenderTransform.Children[1].Angle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource angleConverter}}" Name="rotationSlider" Minimum="-180" Maximum="180" Grid.Column="1" Grid.Row="3" IsEnabled="{Binding Path=selectedData.IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"/>

            </Grid>
            <GridSplitter Grid.Column="3"/>
            
            
            <GridSplitter Grid.Column="5"/>
            <Button Name="deleteButton" Grid.Column="6" Content="{x:Static p:Resources.deleteText}" Click="DeleteSelected" Style="{StaticResource disabledButton}"/>
            <Button Name="randomColorsButton" Grid.Column="7" Content="{x:Static p:Resources.randomColorsText}" Click="SetRandomColors" Style="{StaticResource disabledButton}"/>
            <GridSplitter Grid.Column="8"/>
            <Button Grid.Column="9" Content="{x:Static p:Resources.saveText}" Click="ExportCanvas" Style="{StaticResource buttonStyle}"/>
            <Button Name="languageButton" Grid.Column="10" Click="ChangeLanguage" Height="50" Width="90">
                <Image>
                    <Image.Source>
                        <BitmapImage UriSource="/Resources/british-flag-small.bmp"/>
                    </Image.Source>
                </Image>
            </Button>
        </Grid>
        <Canvas Name="myCanvas" Grid.Row="1" Background="{StaticResource gradientBrush}" ClipToBounds="True" MouseLeftButtonDown="myCanvas_MouseLeftButtonDown"/>
    </Grid>
</Window>
